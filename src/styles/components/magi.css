/* MAGI 核心界面样式 */

/* 系统容器 */
.system {
  background: var(--color-background);
  border: var(--border-width) solid var(--color-border);
  padding: var(--spacing-sm);
  width: 100vw;
  height: 100vh;
  display: flex;
  flex-direction: row;
  position: relative;
  margin: 0;
  box-sizing: border-box;
  transition: padding-right 0.6s ease-in-out; /* 添加右侧padding过渡 */
}

/* 右侧面板隐藏时，系统容器去掉右侧padding */
.system.right-panel-hidden {
  padding-right: 0;
}

/* 左侧面板 */
.left-panel {
  width: var(--panel-left-width);
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  border-right: 0px solid var(--color-border);
  padding-right: var(--spacing-sm);
  position: relative;
  transform: translateX(0); /* 添加默认transform */
  transition: width 0.6s ease-in-out, padding-right 0.6s ease-in-out, transform 0.6s ease-out;
}

/* 右侧面板 */
.right-panel {
  width: var(--panel-right-width);
  display: flex;
  flex-direction: column;
  padding-left: var(--spacing-sm);
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
  transform: translateX(0);
  opacity: 1;
  /* 展开时：宽度瞬间变化，transform和透明度有动画 */
  transition: 
    transform 0.6s ease-in-out,
    opacity 0.6s ease-in-out;
}

/* 设置按钮 - 移除原有重复的样式定义 */

/* MAGI 核心显示区网格布局 */
.magi {
  display: grid;
  grid-template-columns:
    [left-header-start] 20px [casper-start status] 2fr [left-header-end balthasar-start casper-balthasar-connection] 0.5fr [casper-end title casper-melchior-connection] 1fr [balthasar-melchior-connection melchior-start] 0.5fr [right-header-start balthasar-end response] 2fr [melchior-end] 20px [right-header-end];
  grid-template-rows:
    20px [header balthasar-start] 1.8fr [status response] 1.8fr [casper-start melchior-start casper-balthasar-connection balthasar-melchior-connection] 1fr [balthasar-end title casper-melchior-connection] 3.4fr [casper-end melchior-end] 20px;
  aspect-ratio: 2 / 1;
  container-type: size;
  border: var(--border-width) solid var(--color-border);
  position: relative;
  background: radial-gradient(ellipse at center, rgba(255, 141, 0, 0.05) 0%, transparent 70%);
  width: 100%;
}

/* 网格调试辅助 (开发时可启用) */
.magi.debug-grid {
  background-image:
    linear-gradient(rgba(255, 141, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 141, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* 三角形几何增强 */
.magi::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 60%;
  height: 60%;
  transform: translate(-50%, -50%);
  border: 1px dashed rgba(255, 141, 0, 0.2);
  pointer-events: none;
  opacity: 0;
  transition: var(--transition-slow);
}

.magi.magi-in-progress::after {
  opacity: 1;
  animation: triangle-outline 3s infinite;
}

@keyframes triangle-outline {

  0%,
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0.2;
  }

  50% {
    transform: translate(-50%, -50%) scale(1.05);
    opacity: 0.5;
  }
}

/* MAGI 标题 */
.magi>.title {
  grid-area: title / title;
  color: var(--color-text);
  text-align: center;
  font-size: 7cqh;
  font-family: var(--font-family-primary);
}

/* 提诉/决议 标题头 */
.magi>.header>hr {
  border: 2px solid #277547;
  border-top: 2px solid #277547;
  border-bottom: 2px solid #277547;
  height: 4px;
  margin: 0 2px 2px 2px;
  background: var(--color-background);
  border-radius: 0;
  box-sizing: content-box;
}

.magi>.header>span {
  color: var(--color-text);
  font-size: 28cqh;
  display: flex;
  justify-content: center;
  transform: scaleY(0.6);
  transform-origin: center;
  font-family: var(--font-family-primary);
  line-height: 1;
  margin-top: -20px;
  margin-bottom: -20px;
  position: relative;
}

.magi>.header.left {
  grid-area: header / left-header-start / auto / left-header-end;
}

.magi>.header.right {
  grid-area: header / right-header-start / auto / right-header-end;
}

/* 系统状态 */
.magi>.system-status {
  grid-area: status;
  color: var(--color-text);
  font-family: var(--font-family-secondary);
  font-weight: 400;
  padding-left: var(--spacing-md);
  margin-bottom: 8px;
}

.magi>.system-status>div {
  font-size: 3cqh;
  margin-left: 4cqw;
  transform: scaleX(1.2);
  transform-origin: left;
  font-weight: 500;
  margin-top: -2px;
  margin-bottom: -2px;
}

.magi>.system-status>div:first-child {
  font-size: 8cqh;
  margin-left: 0;
}

/* 最终响应状态 */
.magi>.response {
  grid-area: response;
  justify-self: flex-end;
  align-self: center;
  border: solid var(--border-width);
  padding: var(--spacing-xs);
}

.magi>.response>.inner {
  white-space: nowrap;
  border: solid var(--border-width);
  padding: var(--spacing-xs) var(--spacing-md);
  font-size: 8cqh;
  font-family: var(--font-family-primary);
  line-height: 0.9;
}

/* 贤者核心 */
.magi>.wise-man {
  display: flex;
  background: var(--color-primary);
  padding: 2px;
  cursor: pointer;
  transition: var(--transition-normal);
  position: relative;
  z-index: 2;
}

/* 贤者网格定位和形状 */
.magi>.wise-man.melchior {
  grid-area: melchior-start / melchior-start / melchior-end / melchior-end;
}

.magi>.wise-man.melchior,
.magi>.wise-man.melchior>.inner {
  clip-path: polygon(29% 0, 100% 0, 100% 100%, 0 100%, 0 44%);
}

.magi>.wise-man.balthasar {
  grid-area: balthasar-start / balthasar-start / balthasar-end / balthasar-end;
}

.magi>.wise-man.balthasar,
.magi>.wise-man.balthasar>.inner {
  clip-path: polygon(0 0, 100% 0, 100% 84%, 75% 100%, 25% 100%, 0 84%);
}

.magi>.wise-man.casper {
  grid-area: casper-start / casper-start / casper-end / casper-end;
}

.magi>.wise-man.casper,
.magi>.wise-man.casper>.inner {
  clip-path: polygon(0 0, 71% 0, 100% 44%, 100% 100%, 0 100%);
}

.magi>.wise-man::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(45deg, var(--color-primary), var(--color-primary-light));
  z-index: -1;
  opacity: 0;
  transition: var(--transition-normal);
}

.magi>.wise-man:hover::before {
  opacity: 0.3;
}

.magi>.wise-man>.inner {
  width: 100%;
  height: 100%;
  font-family: var(--font-family-secondary);
  font-size: 8cqh;
  font-weight: 500;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 1;
  color: #000;
  text-transform: uppercase;
  background: #4a90e2;
}

/* 各核心文字居中调整 */
.magi>.wise-man.melchior>.inner {
  justify-content: center;
  align-items: center;
  text-align: center;
}

.magi>.wise-man.balthasar>.inner {
  justify-content: center;
  align-items: center;
  text-align: center;
}

.magi>.wise-man.casper>.inner {
  justify-content: center;
  align-items: center;
  text-align: center;
}

/* 贤者状态颜色 */
.magi>.wise-man.status-yes {
  background: var(--color-primary);
}

.magi>.wise-man.status-yes>.inner {
  background: #52e691;
  color: #000;
}

.magi>.wise-man.status-no {
  background: var(--color-primary);
}

.magi>.wise-man.status-no>.inner {
  background: #a41413;
  color: #fff;
}

.magi>.wise-man.status-conditional {
  background: var(--color-primary);
}

.magi>.wise-man.status-conditional>.inner {
  background: repeating-linear-gradient(56deg, rgb(82, 230, 145) 0px, rgb(82, 230, 145) 30px, #82cd68 30px, #82cd68 60px);
  color: #000;
}

.magi>.wise-man.status-info {
  background: var(--color-primary);
}

.magi>.wise-man.status-info>.inner {
  background: #3caee0;
  color: #000;
}

.magi>.wise-man.status-error {
  background: var(--color-primary);
}

.magi>.wise-man.status-error>.inner {
  background: #000;
  color: #fff;
}

.magi>.wise-man.status-standby {
  background: var(--color-primary);
}

.magi>.wise-man.status-standby>.inner {
  background: #3caee0;
  color: #000;
}

.magi>.wise-man.status-processing {
  background: var(--color-primary);
}

.magi>.wise-man.status-processing>.inner {
  background: #3caee0;
  color: #000;
}

/* 处理中状态的连接线动画 */
.magi-in-progress .connection {
  animation: connection-pulse 2s infinite;
}

/* 连接线 */
.connection {
  height: 6px;
  background: var(--color-connection);
  align-self: center;
  margin: -10%;
  position: relative;
  overflow: hidden;
  transition: var(--transition-normal);
  z-index: 1;
}

.connection::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, var(--color-primary-light), transparent);
  transition: var(--transition-normal);
}

.connection.active::before {
  animation: connection-flow 1.5s infinite;
}

.connection.casper-balthasar {
  grid-area: casper-balthasar-connection;
  transform: rotate(-54deg);
  transform-origin: center;
}

.connection.casper-melchior {
  grid-area: casper-melchior-connection;
}

.connection.balthasar-melchior {
  grid-area: balthasar-melchior-connection;
  transform: rotate(54deg);
  transform-origin: center;
}

/* 连接线动画 */
@keyframes connection-pulse {

  0%,
  100% {
    background: var(--color-connection);
    box-shadow: none;
  }

  50% {
    background: var(--color-primary-light);
    box-shadow: 0 0 10px var(--color-primary);
  }
}

@keyframes connection-flow {
  0% {
    left: -100%;
  }

  100% {
    left: 100%;
  }
}

/* 响应状态颜色 */
.response.status-yes,
.response.status-yes>.inner {
  color: #000;
  background: #52e691;
  border-color: #52e691;
}

.response.status-no,
.response.status-no>.inner {
  color: #fff;
  background: #a41413;
  border-color: #a41413;
}

.response.status-conditional,
.response.status-conditional>.inner {
  color: #000;
  background: #ff8d00;
  border-color: #ff8d00;
}

.response.status-info,
.response.status-info>.inner {
  color: #000;
  background: #3caee0;
  border-color: #3caee0;
}

.response.status-error,
.response.status-error>.inner {
  color: #fff;
  background: #000;
  border-color: #000;
}

.response.status-standby,
.response.status-standby>.inner {
  color: var(--color-text);
  background: var(--color-background);
  border-color: var(--color-border);
}

.response.status-processing,
.response.status-processing>.inner {
  color: var(--color-text);
  background: var(--color-background);
  border-color: var(--color-border);
}

/* 闪烁动画 */
@keyframes flicker-animation {
  50% {
    background: var(--color-background);
    color: var(--color-background);
  }
}

.magi-in-progress .connection,
.magi-in-progress .wise-man>.inner,
.response.flicker>.inner {
  animation: var(--animation-flicker);
}

/* 悬停效果 */
.magi>.wise-man:hover {
  opacity: var(--opacity-hover);
  transform: scale(1.02);
}

.magi>.wise-man:active {
  opacity: var(--opacity-active);
  transform: scale(0.98);
}

/* 动画状态 */
.magi>.wise-man.animating {
  animation: var(--animation-flicker);
}

/* 键盘导航支持 */
.magi>.wise-man:focus {
  outline: 2px solid var(--color-primary-light);
  outline-offset: 2px;
}

/* 状态指示器 */
.magi>.wise-man::after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--color-standby);
  border: 1px solid var(--color-background);
  opacity: 0;
  transition: var(--transition-normal);
}

.magi>.wise-man.status-processing::after {
  opacity: 1;
  animation: pulse 1s infinite;
}

@keyframes pulse {

  0%,
  100% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 0.5;
    transform: scale(1.2);
  }
}

/* 面板展开/收缩功能样式 */

.right-panel.hidden {
  width: 0;
  min-width: 0;
  transform: translateX(100%);
  opacity: 0;
  pointer-events: none;
  overflow: hidden;
  padding-left: 0;
  /* 收缩时：先transform和opacity变化，然后width变化 */
  transition: 
    transform 0.6s ease-in-out,
    opacity 0.6s ease-in-out,
    width 0.6s ease-in-out 0.1s; /* width延迟0.1s */
}

/* 左侧面板全屏效果 - 当右侧面板隐藏时扩展 */
.left-panel.fullscreen {
  flex-grow: 1; /* 占据剩余空间 */
  max-width: 1200px;
  margin: 0 auto;
  padding-right: 0;
}

/* 控制按钮区域 - 使用flex布局with space-between */
.control-buttons {
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: auto;
  min-width: 100px;
  height: 40px;
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between; /* 改为space-between确保分散对齐 */
  z-index: 9999;
  /* 临时调试 - 可以看到容器边界 */
  padding: 5px;
}

/* 展开/收缩按钮 - 默认转180度 */
.panel-toggle-btn {
  position: relative;
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid var(--color-primary);
  color: var(--color-primary);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0.6;
  transition: var(--transition-normal);
  user-select: none;
  flex-shrink: 0;
  transform: rotate(180deg); /* 默认转180度 */
}

/* 设置按钮 - 回到flex item */
.settings-icon {
  position: relative;
  background: rgba(0, 0, 0, 0.8);
  border: 2px solid var(--color-primary);
  color: var(--color-primary);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  opacity: 0.6;
  transition: var(--transition-normal);
  user-select: none;
  font-size: 20px;
  flex-shrink: 0;
}

.panel-toggle-btn:hover {
  opacity: 1;
  background: rgba(255, 141, 0, 0.1);
}

/* 设置按钮hover效果 */
.settings-icon:hover {
  opacity: 1;
  background: rgba(255, 141, 0, 0.1);
  transform: rotate(90deg);
}

.settings-icon:active {
  transform: scale(0.95);
}

/* 当右侧面板隐藏时，按钮的特殊样式 */
.right-panel.hidden ~ .control-buttons .panel-toggle-btn {
  transform: rotate(0deg); /* 隐藏面板后正常角度 */
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 5px rgba(255, 141, 0, 0.3);
  }
  50% {
    box-shadow: 0 0 20px rgba(255, 141, 0, 0.6);
  }
}

/* 启动动画样式 */
/* 启动画面容器 */
.startup-screen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: var(--color-background);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 10000;
  opacity: 1;
  transition: opacity 1s ease-out;
}

.startup-screen.fade-out {
  opacity: 0;
  pointer-events: none;
}

/* 启动文字容器 */
.startup-text {
  font-family: var(--font-family-primary);
  font-size: 8rem;
  color: var(--color-primary);
  text-align: center;
  letter-spacing: 0.2em;
}

/* 打字机效果 */
.typewriter {
  overflow: hidden;
  border-right: 3px solid var(--color-primary);
  white-space: nowrap;
  animation: 
    typing 2s steps(6, end),
    blink-caret 1s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--color-primary); }
}

/* 系统容器初始状态 - 启动时隐藏 */
.system.startup-mode {
  opacity: 0;
}

/* 面板初始滑入状态 - 提高特定性 */
.system.startup-mode .left-panel.left-panel {
  transform: translateX(-100%) !important;
  transition: transform 1s ease-out !important;
}

.system.startup-mode .right-panel.right-panel {
  transform: translateX(100%) !important;
  transition: transform 1s ease-out !important;
}

/* 启动完成状态 - 面板滑入 */
.system.startup-complete {
  opacity: 1;
  transition: opacity 0.6s ease-out;
}

/* 启动完成后，只设置初始位置，不再控制过渡 - 提高特定性 */
.system.startup-complete .left-panel.left-panel {
  transform: translateX(0) !important;
}

.system.startup-complete .right-panel.right-panel {
  transform: translateX(0) !important;
}